export default {
  language: {
    'en-us': 'English US',
    'fr-ca': 'Français Canada',
  },
  boot: {
    notifyDefault: {
      close: 'Close',
    },
  },
  common: {
    components: {
      entitySelector: {
        accept: 'Accept',
        cancel: 'Cancel',
        clearTick: 'Uncheck',
      },
      export: {
        name: 'Export',
        title: 'Export to',
        csv: 'A CSV File',
        xls: 'An Excel File',
        userName: 'User',
        date: 'Date',
        timezone: 'Timezone',
        tagsTitle: 'Tags',
        downloadCSV: 'Download (CSV)',
        downloadExcel: 'Download (Excel)',
        reportTimezone: 'Report Timezone',
        liveHaulPlanningReport: 'Live Haul Planning Report',
        downloadLiveHaulPlanningReport: 'Download (Live Haul Planning Report)',
        feedDeliveryScheduleReportFileName: 'Feed Delivery Schedule Report',
        feedDeliveryScheduleReport: 'Feed Delivery Schedule',
        downloadFeedDeliveryScheduleReport: 'Download (Feed Delivery Schedule)',
      },
    },
    utils: {
      report: {
        frequencyHour: 'Hourly',
        frequencyDay: 'Daily',
        frequencyWeek: 'Weekly',
        frequencyMonth: 'Monthly',
        frequencyDeactivated: 'Deactivated',
      },
      httpErrorWrapper: {
        networkError: 'Network Error. Try again later',
        axiosConnectionTimeout: 'Request Timeout exceeded {timeoutMin} minute(s).',
        axiosConnectionAborted: 'Connection to the server has been interrupted.',
        axiosUnknownError: 'Something wrong with the request to the server or the server did not respond. Error ({error}).',
      },
      localizeHTTPStatus: {
        unauthenticated: 'Unauthenticated',
        unauthorized: 'Unauthorized',
        networkError: 'Network Error. Try again later',
        done: 'All done. Request successfully executed',
        created: 'Data successfully created',
        badRequest: 'Bad Request',
        notFound: 'Not found',
        serviceUnavailable: 'Service Unavailable',
        gatewayTimeout: 'Gateway Timeout',
        unknownError: 'Oops... Something wrong.',
      },
      unit: {
        unitContextIDNotFound: 'Unit context with the ID {id} does not exist!',
        unitContextNameNotFound: 'Unit context with the name {name} does not exist!',
        unitIDNotFound: 'Unit with the ID {id} does not exist!',
        unitCategoryIDNotFound: 'Unit category with the ID {id} does not exist!',
        systemUnitNotFound: 'System unit not found for unit context with ID {id}!',
        userUnitNotFound: 'User unit with ID {id} not found for unit context with ID {unitContextID}!',
      },
    },
  },
  error404: {
    title: 'Oops. Nothing here...',
    goBack: 'Go back',
    goHome: 'Go home',
  },
  error403: {
    title: 'You are not authorized to view this page',
    goBack: 'Go back',
    goHome: 'Go home',
  },
  app: {
    logout: 'Logout',
    preference: 'Preferences',
    userSettings: 'User Settings',
    whatsNew: "What's New",
    profile: 'Profile',
    contactUs: 'Contact Us',
    menuGlobalView: 'Global View',
    menuGlobalViewDescription: 'Quick glance at latest data',
    menuHistoricalView: 'Historical',
    menuHistoricalDescription: 'Historical',
    menuCompareView: 'Compare',
    menuCompareViewDescription: 'Compare',
    menuHouseView: 'House View',
    menuMap: 'Map',
    menuMapDescription: 'Access by geolocation',
    menuAdminZone: 'Admin',
    menuAdminZoneDevices: 'Devices',
    menuAdminZoneEntities: 'Entities',
    menuAdminZoneUsers: 'Users',
    menuAdminZoneReports: 'Reports',
    menuAdminZonePoultryCurve: 'Poultry Curves',
    menuAdminZoneTags: 'Tag List',
    quasarFileNotFound: 'The Quasar Framework file ({localeFile}) does not exist!',
    needAuthorization: 'Your session has expired. Please login again.',
    hideMenu: 'Hide Menu',
    aboutCompass: 'About Compass',
    notifications: 'Notifications',
    signout: 'Sign Out',
    configuration: 'Configuration',
    help: 'Help',
  },
  aboutCompass: {
    closeButton: 'Close',
    title: 'Using technology and advanced analytics, Compass helps producers to uncover savings in their production data.',
    softwareLicense: 'Software License',
  },
  notifications: {
    title: 'Alerts & Notifications',
    viewAll: 'View all',
  },
  plugins: {
    notifyResponse: {
      invalidErrorType: 'Type {type} is not a supported error type',
      validationErrors: 'Validation errors',
    },
  },
  login: {
    title: 'Login',
    signInTitle: 'Sign in to Compass Platform',
    email: 'Email address',
    emailPlaceholder: 'you@example.com',
    emailValidate: 'Email must be valid!',
    emailRequired: 'Email is required!',
    password: 'Password',
    passwordPlaceholder: 'Enter your Password',
    passwordRequired: 'A Password is required!',
    stayConnected: 'Stay connected',
    signInButton: 'Sign in',
    leftSectionFooterText: '©2021 Intelia Technologies Inc. All Rights Reserved.',
    rightSectionTopTitle: 'Did you know Intelia had been nominated as one of the',
    rightSectionBottomTitle: 'by Food and Beverage Tech Review?',
    readArticleButton: 'Read Article',
    maintenancePageLink: 'Maintenance Page Link',
  },
  forgotPassword: {
    title: 'Forgot your password?',
    email: 'Email address',
    emailPlaceholder: 'you@example.com',
    emailValidate: 'Email must be valid!',
    emailRequired: 'Email is required!',
    searchingPassword: 'Searching for user information and sending a reset password instruction email. Please wait...',
    resetPasswordEmailSending: 'You will receive an email shortly with instructions on how to reset your password',
    forgotPasswordButton: 'Forgot Password',
    cancelButton: 'Cancel',
  },
  resetPassword: {
    title: 'Reset password',
    invalidRequest: 'Reset password request is invalid.',
    apply: 'Apply',
    cancel: 'Cancel',
    passwordNew: 'New',
    newPasswordRequired: 'Required',
    newPasswordMinLength: 'Password must have at least {min} letters.',
    passwordConfirm: 'Confirm',
    confirmPasswordRequired: 'Required',
    confirmPasswordSameAs: 'Confirmation should match new password',
    passwordResetSuccessfully: 'Your password has been reset successfully. Click on the button below to be redirected to the home page.',
    goBackHome: 'Go back home',
  },
  home: {
    title: 'GlobalView',
    datatableColumnGraph: 'Graph',
    datatableColumnGraphLink: 'View',
    datatableColumnEntity: 'Entity',
    datatableColumnDevice: 'Device',
    datatableColumnLastUpdate: 'Last Update',
    datatableColumnDataNever: 'Never',
    exportFileName: 'compass-overview',
    exportSheetName: 'Overview',
    exportTitle: 'Overview',
    na: 'N/A',
    columnVisibility: 'Column visibility',
    selectReport: 'Select report',
    filterProduction: 'Production',
    filterFeedUsage: 'Feed Usage',
    filterClimate: 'Climate',
    filterPoultryWeight: 'Poultry Weight',
    filterWaterMeter: 'Water Meter',
    filterCustom: 'Custom',
    filterScoreCard: 'Score Card',
    search: 'Search',
    estimatedCatchDate: 'Estimated Catch Date',
    showing: 'Showing',
    view: 'View',
    selectAll: 'Select All',
    unSelectAll: 'UnSelect All',
    allRows: 'All',
    loadingData: 'Loading Data...',
    of: 'of',
  },
  singleDevice: {
    title: 'Title',
    currentValues: 'Last Values',
    lastUpdated: 'Last updated',
    timezone: 'Timezone',
    comprehensiveData: 'Comprehensive Data',
    currentProduction: 'Current Production',
    last7Days: 'Last 7 Days',
    last30Days: 'Last 30 Days',
    poultryWeight: 'Poultry Weight',
    poultryWeightPrediction: 'Poultry Weight Prediction',
    current: 'Current',
    day: 'Day',
    industry: 'Industry',
    siloStatus: 'Bin Scale Status',
    ambientConditions: 'Ambient Conditions',
    airQuality: 'Air Quality',
    loadingData: 'Loading Data...',
    tagSelectionLimitReached: 'The graph supports no more than {count} tags at a time.',
    silo: 'Bin Scale',
    binWeight: 'Bin Weight',
    graphTitle: 'Historical',
    predictionPoultryGraphTitle: 'Prediction',
    errorGettingPredictionData: 'Was not able to retrieve prediction data from the server.',
    outOfProduction: 'Out of Production',
    timestamp: 'Timestamp',
    water: 'Water',
    feedConsumption: 'Feed Consumption',
    population: 'Population',
    pressure: 'Pressure',
    maximumTagReached: 'Maximum selected tags reached',
    selectTagText: 'Select tags to add to the graph',
    inputs: 'sensors',
    health: 'Health',
    feedConversionRatio: 'Feed Conversion Ratio',
    flockCompare: 'Flock comparison',
    dateCompare: 'Date comparison',
    maximumDeviceReached: 'Maximum number of devices reached',
    selectDeviceText: 'Select a device to compare with',
    refreshPageButton: 'Refresh Page',
    male: 'Male',
    female: 'Female',
    asHatched: 'As hatched',
    maleAndFemale: 'Male & Female',
    compareApply: 'Apply',
  },
  map: {
    title: 'Map',
    view: 'View',
    clickMarker: 'Click on a marker to see its data.',
    noDeviceFound: 'No device found.',
    invalidDevice: 'Invalid device {device}.',
    loadingData: 'Loading Data...',
    tabs: {
      production: 'Production',
      poultryWeight: 'Poultry Weight',
      feedUsage: 'Feed Usage',
      waterUsage: 'Water Usage',
      climate: 'Climate',
    },
    alertAndNotification: {
      title: 'Alert and Notification status',
      status: {
        all: 'All',
        high: 'High',
        medium: 'Medium',
        low: 'Low',
      },
    },
    houseViewButton: 'House View',
  },
  profile: {
    title: 'Profile',
  },
  preference: {
    security: {
      title: 'Security',
      changePassword: 'Change password',
      passwordCurrent: 'Current',
      passwordNew: 'New',
      passwordConfirm: 'Confirm',
      securityApply: 'Apply',
      currentPasswordRequired: 'Required',
      newPasswordRequired: 'Required',
      newPasswordMinLength: 'Password must have at least {min} letters.',
      confirmPasswordRequired: 'Required',
      confirmPasswordSameAs: 'Confirmation should match new password',
      passwordChangedSuccessfully: 'Your password has been successfully changed',
      newPasswordShouldBeDifferenThanCurrent: 'The new password should be different than the current',
    },
    preference: {
      title: 'Preferences',
      region: 'Local settings',
      timeZone: 'Timezone',
      timeZoneRequired: 'Required',
      language: 'Language',
      languageRequired: 'Required',
      unit: 'Units',
      unitRequired: 'Required',
      apply: 'Apply',
      changedSuccessfully: 'Preferences updated successfully',
    },
  },
  admin: {
    user: {
      list: {
        title: 'List of Users',
        topButtonEdit: 'Edit',
        topButtonNew: 'New',
        topButtonDelete: 'Delete',
        columnDevice: 'Device',
        columnId: 'ID',
        columnFirstName: 'First Name',
        columnLastName: 'Name',
        columnEmail: 'Email',
        columnRole: 'Role',
        columnTimezone: 'Timezone',
      },
      components: {
        createEdit: {
          firstName: 'First Name',
          firstNameRequired: 'Required',
          lastName: 'Last Name',
          lastNameRequired: 'Required',
          email: 'Email',
          emailRequired: 'Required',
          emailInvalid: 'Should be a valid email address',
          role: 'Role',
          roleRequired: 'Required',
          timeZone: 'Timezone',
          timeZoneRequired: 'Required',
          language: 'Language',
          languageRequired: 'Required',
        },
      },
      new: {
        title: 'Create a new user',
        cancel: 'Cancel',
        create: 'Create',
        creatingLoading: 'Creating new user and sending an email with connection instructions. Please be patient...',
        userCreatedSuccessfully: 'User {name} created successfully. An email has been sent with instructions to connect to Compass.',
      },
      edit: {
        title_single: 'Edit a user',
        title_multiple: 'Edit multiple users',
        cancel: 'Cancel',
        save: 'Save',
        userEditedSuccessfully: 'User {name} saved successfully.',
        usersEditedSuccessfully: 'Multiple users saved successfully.',
      },
      delete: {
        title: 'Delete users',
        cancel: 'Cancel',
        delete: 'Delete',
        id: 'ID',
        email: 'Email',
        usersDeletedSuccessfully: '{count} user(s) deleted successfully',
        confirmation: 'Do you really want to delete the following users?',
      },
    },
    entity: {
      list: {
        title: 'List of entities',
        topButtonTickAll: 'Select all',
        topButtonUnTickAll: 'Deselect all',
        topButtonTickAllImmediateChildren: 'Select immediate children',
        topButtonUnTickAllImmediateChildren: 'Deselect immediate children',
        topButtonTickAllChildren: 'Select children',
        topButtonUnTickAllChildren: 'Deselect children',
        topButtonTickAllSibling: 'Select sibling',
        topButtonUnTickAllSibling: 'Deselect sibling',
        topButtonUser: 'Users',
        topButtonNotification: 'Notifications',
        tickOperation: 'Select',
        keepTickedInSearch: 'Keep checked entity in filter',
        editionOperation: 'Edit',
        editionOperationAddRoot: 'Add to root',
        editionOperationAddSibling: 'Add sibling',
        editionOperationAddChildren: 'Add children',
        editionOperationEdit: 'Edit',
        editionOperationDelete: 'Delete',
      },
      components: {
        createEdit: {
          name: 'Name',
          nameRequired: 'Required',
          isInvalid: 'Should not contain \\ or /',
        },
      },
      new: {
        titleRoot: 'Create a new root entity',
        titleSibling: 'Create a sibling entity to {path}',
        titleChildren: 'Create a children entity under {path}',
        cancel: 'Cancel',
        create: 'Create',
        entityCreatedSuccessfully: 'Entity {name} created successfully.',
      },
      edit: {
        title: 'Edit the entity {path}',
        cancel: 'Cancel',
        save: 'Save',
        entityEditedSuccessfully: 'Entity {name} saved successfully.',
      },
      delete: {
        title: 'Delete entities',
        cancel: 'Cancel',
        delete: 'Delete',
        id: 'ID',
        entityDeletedSuccessfully: '{count} entity deleted successfully',
        confirmation: 'Do you really want to delete the following entity?',
      },
      user: {
        title: 'Assigning Users to Entity {path}',
        cancel: 'Cancel',
        save: 'Save',
        columnName: 'Name',
        columnEmail: 'Email',
        entityDoesNotExits: 'This entity does not exist',
        userEditedSuccessfully: '{count} users saved successfully',
      },
      editNotification: {
        title: 'Editing notifications of the entity {path}',
        columnId: 'ID',
        columnState: 'Status',
        columnTag: 'Tag',
        columnOperator: 'Operator',
        columnValue: 'Value',
        cancel: 'Cancel',
        save: 'Save',
        entityDoesNotExits: 'This entity does not exist',
        notificationsEditedSuccessfully: '{count} notification(s) saved successfully',
        dataDecimalRequired: 'Decimal number required',
      },
    },
    device: {
      list: {
        title: 'List of Devices',
        topButtonEdit: 'Edit',
        topButtonNew: 'New',
        topButtonDelete: 'Delete',
        columnId: 'ID',
        columnName: 'Name',
        columnHardwareId: 'Hardware ID',
        columnEntity: 'Entity',
        columnTimeZone: 'Timezone',
        columnForwardURL: 'Forward URL',
        columnForwardFileFormat: 'Forward Format',
      },
      components: {
        createEdit: {
          name: 'Name',
          nameRequired: 'Required',
          entitySelectorTitle: 'Select an entity',
          entity: 'Entity',
          entityRequired: 'Required',
          hardwareId: 'Hardware ID',
          hardwareIdRequired: 'Required',
          hardwareIdInvalid: 'Must contains 8 characters in hexadecimal format',
          timezone: 'Timezone',
          timezoneRequired: 'Required',
          gpsLatitude: 'GPS Latitude',
          gpsLatitudeInvalid: 'Must be a decimal number between {min} and {max}',
          gpsLongitude: 'GPS Longitude',
          gpsLongitudeInvalid: 'Must be a decimal number between {min} and {max}',
          forwardURL: 'Forward URL',
          forwardURLInvalid: 'Must be a valid URL',
          forwardFileFormat: 'Forward File Format',
          forwardFileFormatRequired: 'Required',
          cat2HouseID: 'CAT2 House ID',
        },
      },
      new: {
        title: 'Create a new device',
        cancel: 'Cancel',
        create: 'Create',
        deviceCreatedSuccessfully: 'Device {name} created successfully.',
      },
      edit: {
        title_single: 'Edit a device',
        title_multiple: 'Edit multiple devices',
        cancel: 'Cancel',
        save: 'Save',
        deviceEditedSuccessfully: 'Device {name} saved successfully.',
        devicesEditedSuccessfully: 'Multiple device saved successfully.',
      },
      delete: {
        title: 'Delete devices',
        cancel: 'Cancel',
        delete: 'Delete',
        id: 'ID',
        hardware_id: 'Hardware ID',
        devicesDeletedSuccessfully: '{count} devices deleted successfully',
        confirmation: 'Do you really want to delete the following devices?',
      },
    },
    report: {
      list: {
        title: 'List of Reports',
        topButtonEdit: 'Edit',
        topButtonNew: 'New',
        topButtonDelete: 'Delete',
        topButtonEntity: 'Entities',
        topButtonEmail: 'Email',
        columnUsedBy: 'Used by',
        columnDevice: 'Device',
        columnID: 'ID',
        columnName: 'Name',
        columnTag: 'Tags',
        columnUser: 'Users (Email)',
        columnEntity: 'Entities',
      },
      components: {
        createEdit: {
          name: 'Name',
          nameRequired: 'Required',
          columnAction: 'Actions',
          columnName: 'Name',
          tags: 'Tags',
          selectTags: 'Select one or multiple tags to add',
        },
        createEditEmail: {
          reportDoesNotExists: 'This report does not exist',
          userDoesNotExists: 'This user does not exist',
          frequency: 'Frequency',
          startingDate: 'Starting date',
          frequencyRequired: 'Frequency required',
          startingDateRequired: 'Starting date required',
          timeZone: 'Timezone',
          timeZoneRequired: 'Timezone required',
          user: 'User',
          userRequired: 'User required',
          device: 'Devices',
          columnName: 'Name',
          selectDevices: 'Select one or more devices to add.',
        },
      },
      new: {
        title: 'Create a new Reports',
        cancel: 'Cancel',
        create: 'Create',
        reportCreatedSuccessfully: 'Report {name} created successfully.',
      },
      edit: {
        title: 'Edit a report',
        cancel: 'Cancel',
        save: 'Save',
        reportEditedSuccessfully: 'Report {name} saved successfully.',
      },
      delete: {
        title: 'Delete reports',
        cancel: 'Cancel',
        delete: 'Delete',
        id: 'ID',
        tagCount: 'Tags {count}',
        userCount: 'Users {count}',
        entityCount: 'Entities {count}',
        reportsDeletedSuccessfully: '{count} reports deleted successfully.',
        confirmation: 'Do you really want to delete the following reports?',
      },
      entity: {
        title: 'Assigned entities to report {name}',
        cancel: 'Cancel',
        save: 'Save',
        reportDoesNotExists: 'This report does not exist.',
        reportSavedSuccessfully: 'Report {name} saved successfully.',
        topButtonTickAll: 'Select all',
        topButtonUnTickAll: 'Deselect all',
        topButtonTickAllImmediateChildren: 'Select immediate children',
        topButtonUnTickAllImmediateChildren: 'Deselect immediate children',
        topButtonTickAllChildren: 'Select children',
        topButtonUnTickAllChildren: 'Deselect children',
        topButtonTickAllSibling: 'Select sibling',
        topButtonUnTickAllSibling: 'Deselect sibling',
        tickOperation: 'Select',
        keepTickedInSearch: 'Keep checked entity in filter',
        reportEntityEditedSuccessfully: 'Report {name} entities saved successfully.',
      },
      emailList: {
        title: 'User(s) receiving by email this report: {name}',
        topButtonEdit: 'Edit',
        topButtonNew: 'New',
        topButtonDelete: 'Delete',
        columnName: 'Name',
        columnEmail: 'Email',
        columnDeviceCount: 'Device Count',
        columnFrequency: 'Frequency',
        frequencyHour: 'Hourly',
        frequencyDay: 'Daily',
        frequencyWeek: 'Weekly',
        frequencyMonthly: 'Monthly',
        frequencyDeactivated: 'Deactivated',
        bottomButtonGoBack: 'Go back',
      },
      emailDelete: {
        title: 'Delete emails of report {name}',
        cancel: 'Cancel',
        delete: 'Delete',
        name: 'Name',
        email: 'Email',
        invalidParameters: 'Invalid parameters',
        reportDoesNotExists: 'This report does not exist',
        reportsEmailDeletedSuccessfully: '{count} report email deleted successfully',
        confirmation: 'Do you really want to delete the following emails?',
        deleteEmailInformation: 'Email: {email}',
        deleteDeviceCountInformation: 'Device Count: {deviceCount}',
        deleteFrequencyInformation: 'Frequency: {frequency}',
      },
      emailNew: {
        title: 'Add email for report {name} ',
        cancel: 'Cancel',
        create: 'Create',
        reportAddedSuccessfully: "Email {email} of report's {name} added successfully.",
      },
      emailEdit: {
        title: 'Edit email for report {name} and user {user}',
        cancel: 'Cancel',
        save: 'Save',
        reportSavedSuccessfully: "Email {email} of report's {name} saved successfully.",
      },
    },
    poultryCurve: {
      list: {
        title: 'List of Poultry Curves',
        topButtonEdit: 'Edit',
        topButtonNew: 'New',
        topButtonClone: 'Clone',
        topButtonDelete: 'Delete',
        columnId: 'Id',
        columnName: 'Name',
        columnDescription: 'Description',
        columnState: 'Status',
        columnVisibility: 'Visibility',
        columnAuthor: 'Author',
        loadingMessage: 'Getting poultry curves list...',
      },
      components: {
        createEdit: {
          name: 'Name',
          nameRequired: 'Required',
          nameMinMaxLength: 'Name must contain between {min} and {max} characters.',
          description: 'Description',
          descriptionMaxLength: 'The description cannot contain more than {max} characters.',
          author: 'Author',
          state: 'State',
          stateRequired: 'Required',
          visibility: 'Visibility',
          visibilityRequired: 'Required',
          data: 'Data',
          tabEditor: 'Editor',
          tabGraphic: 'Graphic',
          dataButtonImport: 'Import...',
          dataButtonImportFromCSV: 'CSV...',
          dataImportCSVDialogTitle: 'CSV Information',
          dataImportCSVDialogContent: 'Do you really want to import poultry curve from a file? If you choose [yes], this will overwrite all data in the current table.</br></br>Be aware that file weight values will be imported using your weight unit preference, which is <b>{unit}</b>.',
          dataImportCSVDialogContentFileFormat: 'Example of the CSV format:',
          dataImportCSVDialogYesButtuon: 'Yes',
          dataImportCSVDialogCancelButtuon: 'Cancel',
          dataImportCSVNotifyOK: '{lineCount} days has been imported.',
          dataImportCSVNotifyError: 'The file {fileName} is not a valid CSV file.',
          dataHeaderWeight: 'Weight',
          dataHeaderFeedUsage: 'Feed Usage',
          dataColumnDay: 'Day',
          dataColumnMale: 'Male',
          dataColumnFemale: 'Female',
          dataDayRequired: 'Required',
          dataDayInteger: 'Integer number required',
          dataDayIntegerBetween: 'Integer between {min} and {max}',
          dataDayIsNotUnique: 'This day already exists',
          dataWeightRequired: 'Required',
          dataConsumptionRequired: 'Required',
          dataDecimal: 'Decimal number required',
          dataGraphWeight: 'Weight',
          dataButtonDownload: 'Download',
        },
      },
      new: {
        title: 'Create a new Poultry Curve',
        cancel: 'Cancel',
        create: 'Create',
        loadingMessageGetAttributes: 'Getting the poultry curve attributes...',
        curveCreatedSuccessfully: 'Poultry curve {name} created successfully.',
        loadingMessage: 'Creating a new curve...',
        loadingMessageGet: 'Getting the curve to clone...',
      },
      edit: {
        title: 'Edit a poultry curve',
        cancel: 'Cancel',
        save: 'Save',
        curveEditedSuccessfully: 'Poultry curve {name} saved successfully.',
        loadingMessageGetAttributes: 'Getting the poultry curve attributes...',
        loadingMessageGet: 'Getting the poultry curve...',
        loadingMessageDownload: 'Downloading a poultry curve...',
        loadingMessageEdit: 'Saving a poultry curve...',
      },
      delete: {
        title: 'Delete poultry curves',
        cancel: 'Cancel',
        delete: 'Delete',
        author: 'Author',
        id: 'ID',
        confirmation: 'Do you really want to delete the following poultry curve?',
        curveDeletedSuccessfully: '{count} poultry curve(s) deleted successfully.',
        loadingMessage: 'Getting poultry curves list...',
        deletingMessage: 'Deleting one or more poultry curve(s)...',
      },
    },
    tags: {
      title: 'Tag List',
      columnTagId: 'ID',
      columnTagName: 'Tag Name',
      columnTagNameLocal: 'Local Tag Name',
      columnUnitContext: 'Unit Context',
      columnUnitCategory: 'Unit Category',
      columnUnitDefault: 'Default Unit',
      columnGraphable: 'Graphable',
      search: 'Search',
    },
  },
  userSettings: {
    title: 'User Settings',
    personalDetails: {
      title: 'Personal Details',
      subTitle: '',
      profileImageUpload: 'Choose an image...',
      profileImageDelete: 'Delete Photo',
      firstName: 'First Name',
      firstNameRequired: 'Required',
      firstNameAlpha: 'Only alphabet characters',
      firstNameChangedSuccessfully: 'Your First Name has been successfully changed',
      lastName: 'Last Name',
      lastNameRequired: 'Required',
      lastNameAlpha: 'Only alphabet characters',
      lastNameChangedSuccessfully: 'Your Last Name has been successfully changed',
      email: 'Email',
      personTitle: 'Title',
      personTitleRequired: 'Required',
      personAlpha: 'Only alphabet characters',
      countryCode: 'Country Code',
      countryCodeRequired: 'Required',
      areaCode: 'Area Code',
      areaCodeRequired: 'Required',
      areaCodeInValid: 'The Area Code is not valid.',
      phoneNumber: 'Phone Number',
      phoneNumberRequired: 'Required',
      phoneNumberValid: 'Phone Number not valid.',
      phoneNumberChangedSuccessfully: 'Your Phone Number has been successfully changed',
      chooseImage: 'choose image',
      profileImageSizeValidate: 'Profile Image Must be less than {size}MB',
      removeProfileImageMessage: 'Profile Image Removed Successfully.',
      noProfileImageSelected: 'No Profile Image Selected',
      profileImageChangedSuccessfully: 'Your Profile Image has been successfully changed',
      removeProfileImageConfirmMessage: 'Are you Sure? You want to delete your profile photo.',
      cancelButton: 'Cancel',
      removeButton: 'Remove',
    },
    accountPreferences: {
      title: 'Account Preferences',
      subTitle: 'Control settings related to your account.',
      region: 'Local Settings',
      timeZone: 'Timezone',
      timeZoneSubTitle: 'This is the Timezone for your account. To set the Timezone for your devices, go to the entites section in configuration',
      timeZoneRequired: 'Required',
      timeZoneChangedSuccessfully: 'Your TimeZone has been successfully changed',
      language: 'Language',
      languageRequired: 'Required',
      languageChangedSuccessfully: 'Your Language has been successfully changed',
      displayCorporateLogo: 'Display Corporate Logo',
      displayCorporateLogoCaption: 'By enabling this you will see the logo of each farm beside its name.',
      displayCorporateLogoChangedSuccessfully: 'Display Corporate Logo has been successfully changed',
    },
    alertAndNotifications: {
      title: 'Alert & Notifications',
      subTitle: 'Compass allows you to receive regular updates via SMS or email.',
      alertTitle: 'Alert',
      alertSubTitle: 'Receive alerts from Compass automatically.',
      alertChangedSuccessfully: 'Your Alert has been successfully changed.',
      notificationsTitle: 'Notifications',
      notificationsSubTitle: 'Receive notifications from Compass automatically.',
      notificationsChangedSuccessfully: 'Your Notifications have been successfully changed',
    },
    security: {
      title: 'Security',
      subTitle: 'Change the password of your account.',
      changePassword: 'Change Password',
      cancelButton: 'Cancel',
      currentPassword: 'Current Password',
      newPassword: 'New Password',
      confirmPassword: 'Confirm Password',
      currentPasswordRequired: 'Required',
      newPasswordRequired: 'Required',
      newPasswordLength: 'Password must have between {min} and {max} characters.',
      newPasswordCharacterValidate: 'Password must contain an upper case letter, a lower case letter and a symbol.',
      confirmPasswordRequired: 'Required',
      confirmPasswordSameAs: 'Confirmation should match new password',
      passwordChangedSuccessfully: 'Your password has been successfully changed',
      newPasswordShouldBeDifferentThanCurrent: 'The new password should be different than the current',
    },
    units: {
      title: 'Units',
      subTitle: 'Changes to units will be reflected across Compass dashboard, graphs and reports.',
      unit: 'Units',
      unitRequired: 'Required',
      unitChangedSuccessfully: 'Unit has been successfully changed',
    },
  },
  contactUs: {
    title: 'Contact us',
    subTitle: 'Welcome! How can we help you?',
    chatTitle: 'Chat with us',
    chatSubTitle: 'Get in touch with our support team via live chat.',
    chatLinkText: "Contact Intelia's support team",
    callUsTitle: 'Call us',
    callUsSubTitle: "If you can't find a solution to your problem, call us to talk directly with our support team.",
    phoneNumber: '1-866-666-6221',
    phoneLink: 'tel:+18666666221',
    visitWebsiteTitle: 'Visit our website',
    visitWebsiteSubTitle: 'To know more about us and the Compass platform, visit our website.',
    websiteURI: 'www.intelia.com',
    websiteURL: 'https://www.intelia.com/',
  },
  whatsNew: {
    title: "What's New",
    subTitle: 'New updates and improvements to Compass.',
    createButton: 'Create',
    createEdit: {
      title: 'Title',
      titleRequired: 'Required',
      description: 'Description',
      descriptionRequired: 'Required',
      status: 'Status',
      statusRequired: 'Required',
      publishDate: 'Publish Date',
      dateRequired: 'Required',
      dateValidate: 'Date must be valid!',
    },
    new: {
      createTitle: "Create What's New",
      createSubTitle: "Create What's New",
      cancelButton: 'Cancel',
      createButton: 'Create',
      whatsNewCreateSuccessfully: "What's New has been successfully created",
    },
    edit: {
      editTitle: "Edit What's New",
      editSubTitle: "Edit What's New",
      cancelButton: 'Cancel',
      editButton: 'Edit',
      whatsNewChangedSuccessfully: "What's New has been successfully changed",
    },
  },
  historical: {
    title: 'Historical',
    house: 'House',
    resetButton: 'Reset',
    applyButton: 'Apply',
    graphTagsLabel: 'Select tags to add to the graph',
    exportSheetName: 'Historique',
    exportTitle: 'Historique',
    tabs: {
      chart: 'Chart',
      table: 'Table',
    },
    period: 'Period',
    periodOptions: {
      last7Days: 'Last 7 days',
      last30Days: 'Last 30 days',
      currentProduction: 'Current Production',
      custom: 'Custom',
    },
    selectedPeriodError: 'The selected period is not valid.',
    houseView: 'House view',
  },
  compare: {
    title: 'Compare',
    house: 'House',
    comparedToHouse: 'Compared To',
    report: 'Report',
    filterTabs: {
      currentProduction: 'Current Production',
      custom: 'Custom',
    },
    resetButton: 'Reset',
    applyButton: 'Apply',
    graphTagsLabel: 'Select tags to add to the graph',
    exportSheetName: 'Compare',
    exportTitle: 'Compare',
    comparisionTab: {
      chart: 'Chart',
      table: 'Table',
    },
    houseView: 'House View',
    showWorstCompareData: 'Show Worst Case Compare Data',
    showNormalCompareData: 'Show Normal Compare Data',
  },
  houseView: {
    title: 'HouseView',
    updated: 'Updated',
    noChartData: 'No data to display',
    tabs: {
      production: 'Production',
      poultryWeight: 'Poultry Weight',
      prediction: 'Prediction',
      feedUsage: 'Feed Usage',
      feedDelivery: 'Feed Delivery',
      waterUsage: 'Water Usage',
      climate: 'Climate',
    },
    production: {
      livability: '% of Livability',
      temperature: 'Temperature (°F)',
      water: 'Water',
      tabs: {
        temperature: 'Temperature',
        water: 'Water',
        ammonia: 'Ammonia',
      },
      statistics: {
        days: 'd',
        production: 'Production',
        percentage: '%',
        breed: 'Breed',
        sex: 'Sex',
        livability: 'Livability',
        totalCount: 'Total Count',
        sevenDaysMortality: '7 Day Mortality',
        today: 'Today',
        yesterday: 'Yesterday',
        birds: 'Birds',
      },
    },
    poultryWeight: {
      averageDailyGain: 'Average Daily Gain',
      weight: 'Weight',
      averageWeightPerDay: 'Average Weight per day',
      temperature: 'Temperature (°F)',
      tabs: {
        temperature: 'Temperature',
        water: 'Water',
        ammonia: 'Ammonia',
        feedUsage: 'Feed Usage',
      },
      statistics: {
        weightUnit: 'lb',
        days: 'd',
        averageWeight: 'Avg Weight',
        twentyFourHoursGain: '24 Hours Gain',
        standardDeviation: 'Standard Deviation',
        timeToTarget: 'Time to Target',
        highestGain: 'Highest Gain',
      },
    },
    prediction: {
      avgPoultryWeight: 'Average Poultry Weight',
      predue: 'Predue - Ross708 (Female)',
      calendar: 'Calendar',
      weight1: 'Weight #1',
      weight2: 'Weight #2',
      prev: 'PREV',
      next: 'NEXT',
    },
    feedUsage: {
      title: 'Feed Usage',
      feedConsumed: 'Feed Consumed/Bird',
      poultryWeight: 'Poultry Weight',
      tabs: {
        temperature: 'Temperature',
        water: 'Water',
        ammonia: 'Ammonia',
        poultryWeight: 'Poultry Weight',
      },
      statistics: {
        todayFeedConversion: 'Today Feed Conversion',
        today: 'Today',
        yesterday: 'Yesterday',
      },
      feedConversion: {
        title: 'Feed Conversion',
        water: 'Water (gal)',
        tabs: {
          temperature: 'Temperature',
          water: 'Water',
          ammonia: 'Ammonia',
          poultryWeight: 'Poultry Weight',
        },
        statistics: {
          last24HoursUsage: 'Last 24 Hour Usage',
          yesterday: 'Yesterday',
          total: 'Total',
          weightUnit: 'lb',
        },
      },
    },
    waterUsage: {
      title: 'Water Usage (gal)',
      temperature: 'Temperature (°F)',
      tabs: {
        temperature: 'Temperature',
        feedUsage: 'Feed Usage',
        poultryWeight: 'Poultry Weight',
      },
      statistics: {
        today: 'Today',
        yesterday: 'Yesterday',
        thisWeek: 'This Week',
        perBird: 'Per Bird',
        waterUnit: 'gal',
        perBirdUnit: 'oz',
      },
    },
    feedDelivery: {
      columns: {
        title: 'Title',
        bin: 'Bin',
        quantity: 'Quantity',
      },
    },
    climate: {
      temperature: 'Temperature (°F)',
      ammonia: 'Ammonia',
      tabs: {
        temperature: 'Temperature',
        humidity: 'Humidity',
        ammonia: 'Ammonia',
        outSideTemp: 'Outside Temp',
      },
      statistics: {
        temperature: {
          title: 'Temperature',
          reference: 'Reference',
          unit: '°F',
          minimum: 'Minimum',
          maximum: 'Maximum',
        },
        humidity: {
          title: 'Humidity',
          target: 'Target',
          unit: '%',
          minimum: 'Minimum',
          maximum: 'Maximum',
        },
        ammonia: {
          title: 'Ammonia',
          target: 'Target',
          unit: 'ppm',
          minimum: 'Minimum',
          maximum: 'Maximum',
        },
        outSideTemperature: {
          title: 'Outside Temperature',
          target: 'Target',
          unit: '°F',
          minimum: 'Minimum',
          maximum: 'Maximum',
        },
      },
    },
  },
  layouts: {
    copyright: 'All Rights Reserved',
    version: 'Version',
  },
};
